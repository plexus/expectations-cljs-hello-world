;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{format ns-name}, :name expectations, :imports nil, :requires {clojure.data clojure.data, clojure.set clojure.set, clojure.string clojure.string, p expectations.platform, expectations.platform expectations.platform}, :uses {format expectations.platform, ns-name expectations.platform, difference clojure.set}, :defs {*test-var* {:name expectations/*test-var*, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 23, :column 1, :end-line 23, :end-column 33, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 23, :column 23, :end-line 23, :end-column 33, :dynamic true}}, by-kind {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 295, :column 7, :end-line 295, :end-column 14, :arglists (quote ([vars]))}, :name expectations/by-kind, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 14, :method-params ([vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vars]))}, warn-on-iref-updates-boolean {:name expectations/warn-on-iref-updates-boolean, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 19, :column 1, :end-line 19, :end-column 34, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 19, :column 6, :end-line 19, :end-column 34}}, test-var {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 219, :column 7, :end-line 219, :end-column 15, :arglists (quote ([v]))}, :name expectations/test-var, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, execute-vars {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 236, :column 7, :end-line 236, :end-column 19, :arglists (quote ([vars]))}, :name expectations/execute-vars, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 19, :method-params ([vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vars]))}, create-context {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 242, :column 7, :end-line 242, :end-column 21, :arglists (quote ([in-context-vars work]))}, :name expectations/create-context, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 21, :method-params ([in-context-vars work]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-context-vars work]))}, *test-meta* {:name expectations/*test-meta*, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 22, :column 1, :end-line 22, :end-column 34, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 22, :column 23, :end-line 22, :end-column 34, :dynamic true}}, message {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 322, :column 4, :end-line 322, :end-column 11, :protocol expectations/CustomPred, :doc nil, :arglists (quote ([e a str-e str-a]))}, :protocol expectations/CustomPred, :name expectations/message, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 11, :method-params ([e a str-e str-a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 322, :max-fixed-arity 4, :fn-var true, :arglists (quote ([e a str-e str-a])), :doc nil}, *test-name* {:name expectations/*test-name*, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 21, :column 1, :end-line 21, :end-column 34, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 21, :column 23, :end-line 21, :end-column 34, :dynamic true}}, in {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 15, :column 7, :end-line 15, :end-column 9, :arglists (quote ([n]))}, :name expectations/in, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 9, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, started {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 106, :column 24, :end-line 106, :end-column 31, :dynamic true, :arglists (quote ([test-name test-meta]))}, :name expectations/started, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 31, :method-params ([test-name test-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([test-name test-meta]))}, find-successes {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 380, :column 7, :end-line 380, :end-column 21, :arglists (quote ([the-seq]))}, :name expectations/find-successes, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 21, :method-params ([the-seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 1, :fn-var true, :arglists (quote ([the-seq]))}, compare-expr {:name expectations/compare-expr, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 324, :column 1, :end-line 324, :end-column 23, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 324, :column 11, :end-line 324, :end-column 23}}, expectation-finished {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 109, :column 24, :end-line 109, :end-column 44, :dynamic true, :arglists (quote ([a-var]))}, :name expectations/expectation-finished, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 44, :method-params ([a-var]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a-var]))}, remove-watch-every-iref-for-updates {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 215, :column 7, :end-line 215, :end-column 42, :arglists (quote ([iref-vars]))}, :name expectations/remove-watch-every-iref-for-updates, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 42, :method-params ([iref-vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iref-vars]))}, raw-str {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 96, :column 7, :end-line 96, :end-column 14, :arglists (quote ([[e a]]))}, :name expectations/raw-str, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 14, :method-params ([p__9451]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[e a]]))}, report {:name expectations/report, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 158, :column 1, :end-line 158, :end-column 17, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 158, :column 11, :end-line 158, :end-column 17}}, colorize-results {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 67, :column 7, :end-line 67, :end-column 23, :arglists (quote ([pred s]))}, :name expectations/colorize-results, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 23, :method-params ([pred s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred s]))}, ansi-colors {:name expectations/ansi-colors, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 43, :column 1, :end-line 43, :end-column 17, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 43, :column 6, :end-line 43, :end-column 17}}, colorize-filename {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 57, :column 7, :end-line 57, :end-column 24, :arglists (quote ([s]))}, :name expectations/colorize-filename, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 24, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, color {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 54, :column 7, :end-line 54, :end-column 12, :arglists (quote ([code & s])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(code s)], :arglists ([code & s]), :arglists-meta (nil)}}, :name expectations/color, :variadic true, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(code s)], :arglists ([code & s]), :arglists-meta (nil)}, :method-params [(code s)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists ([code & s])}, *prune-stacktrace* {:name expectations/*prune-stacktrace*, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 24, :column 1, :end-line 24, :end-column 41, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 24, :column 23, :end-line 24, :end-column 41, :dynamic true}}, colorize-warn {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 74, :column 7, :end-line 74, :end-column 20, :arglists (quote ([s]))}, :name expectations/colorize-warn, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, *report-counters* {:name expectations/*report-counters*, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 26, :column 1, :end-line 26, :end-column 40, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 26, :column 23, :end-line 26, :end-column 40, :dynamic true}}, ->failure-message {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 134, :column 7, :end-line 134, :end-column 24, :arglists (quote ([{:keys [raw ref-data result expected-message actual-message message list show-raw]}]))}, :name expectations/->failure-message, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 24, :method-params ([p__9477]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [raw ref-data result expected-message actual-message message list show-raw]}]))}, initial-report-counters {:name expectations/initial-report-counters, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 28, :column 1, :end-line 28, :end-column 29, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 28, :column 6, :end-line 28, :end-column 29}}, pp-str {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 99, :column 7, :end-line 99, :end-column 13, :arglists (quote ([e]))}, :name expectations/pp-str, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 13, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, expected-message {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 320, :column 4, :end-line 320, :end-column 20, :protocol expectations/CustomPred, :doc nil, :arglists (quote ([e a str-e str-a]))}, :protocol expectations/CustomPred, :name expectations/expected-message, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 20, :method-params ([e a str-e str-a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 320, :max-fixed-arity 4, :fn-var true, :arglists (quote ([e a str-e str-a])), :doc nil}, run-tests-on-shutdown {:name expectations/run-tests-on-shutdown, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 18, :column 1, :end-line 18, :end-column 27, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 18, :column 6, :end-line 18, :end-column 27}}, localize {:name expectations/localize, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 569, :column 1, :end-line 569, :end-column 19, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 569, :column 11, :end-line 569, :end-column 19}}, test-vars {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 250, :column 7, :end-line 250, :end-column 16, :arglists (quote ([vars-by-kind ignored-expectations]))}, :name expectations/test-vars, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 16, :method-params ([vars-by-kind ignored-expectations]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vars-by-kind ignored-expectations]))}, reminder {:name expectations/reminder, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 31, :column 1, :end-line 31, :end-column 31, :dynamic true, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 31, :column 23, :end-line 31, :end-column 31, :dynamic true}}, ignored-fns {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 111, :column 24, :end-line 111, :end-column 35, :dynamic true, :arglists (quote ([{:keys [className fileName]}]))}, :name expectations/ignored-fns, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 35, :method-params ([p__9466]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [className fileName]}]))}, finished {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 107, :column 24, :end-line 107, :end-column 32, :dynamic true, :arglists (quote ([test-name test-meta]))}, :name expectations/finished, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 32, :method-params ([test-name test-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([test-name test-meta]))}, expect-fn {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 319, :column 4, :end-line 319, :end-column 13, :protocol expectations/CustomPred, :doc nil, :arglists (quote ([e a]))}, :protocol expectations/CustomPred, :name expectations/expect-fn, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 13, :method-params ([e a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 319, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e a])), :doc nil}, colorize-choice {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 39, :column 7, :end-line 39, :end-column 22, :arglists (quote ([]))}, :name expectations/colorize-choice, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ansi {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 51, :column 7, :end-line 51, :end-column 11, :arglists (quote ([code]))}, :name expectations/ansi, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 11, :method-params ([code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([code]))}, inc-report-counter {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 85, :column 7, :end-line 85, :end-column 25, :arglists (quote ([name]))}, :name expectations/inc-report-counter, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 25, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, no-op {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([& _])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}}, :name expectations/no-op, :variadic true, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}, :method-params [(_)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists ([& _])}, inc-counter! {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 82, :column 8, :end-line 82, :end-column 20, :private true, :arglists (quote ([counters name]))}, :private true, :name expectations/inc-counter!, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 20, :method-params ([counters name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([counters name]))}, summary {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 105, :column 24, :end-line 105, :end-column 31, :dynamic true, :arglists (quote ([msg]))}, :name expectations/summary, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 31, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, disable-run-on-shutdown {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 196, :column 7, :end-line 196, :end-column 30, :arglists (quote ([]))}, :name expectations/disable-run-on-shutdown, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, test-file {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 93, :column 7, :end-line 93, :end-column 16, :arglists (quote ([{:keys [file line]}]))}, :name expectations/test-file, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 16, :method-params ([p__9446]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [file line]}]))}, CustomPred {:meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 318, :column 14, :end-line 318, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {expect-fn [[e a]], expected-message [[e a str-e str-a]], actual-message [[e a str-e str-a]], message [[e a str-e str-a]]}}}, :protocol-symbol true, :name expectations/CustomPred, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 24, :column 1, :line 318, :protocol-info {:methods {expect-fn [[e a]], expected-message [[e a str-e str-a]], actual-message [[e a str-e str-a]], message [[e a str-e str-a]]}}, :info nil, :end-line 318, :impls #{}, :doc nil, :jsdoc ("@interface")}, fail {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 102, :column 24, :end-line 102, :end-column 28, :dynamic true, :arglists (quote ([test-name test-meta msg]))}, :name expectations/fail, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 28, :method-params ([test-name test-meta msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 102, :end-line 102, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-name test-meta msg]))}, stackline->str {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 123, :column 8, :end-line 123, :end-column 22, :private true, :arglists (quote ([{:keys [className methodName fileName lineNumber]}]))}, :private true, :name expectations/stackline->str, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 22, :method-params ([p__9471]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [className methodName fileName lineNumber]}]))}, colorize-raw {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 62, :column 7, :end-line 62, :end-column 19, :arglists (quote ([s]))}, :name expectations/colorize-raw, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, string-join {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([s coll]))}, :name expectations/string-join, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 18, :method-params ([s coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s coll]))}, run-tests-in-vars {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 275, :column 7, :end-line 275, :end-column 24, :arglists (quote ([vars-by-kind]))}, :name expectations/run-tests-in-vars, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 24, :method-params ([vars-by-kind]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vars-by-kind]))}, add-watch-every-iref-for-updates {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 199, :column 7, :end-line 199, :end-column 39, :arglists (quote ([iref-vars]))}, :name expectations/add-watch-every-iref-for-updates, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 39, :method-params ([iref-vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iref-vars]))}, show-raw-choice {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 34, :column 7, :end-line 34, :end-column 22, :arglists (quote ([]))}, :name expectations/show-raw-choice, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ns-finished {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 108, :column 24, :end-line 108, :end-column 35, :dynamic true, :arglists (quote ([a-ns]))}, :name expectations/ns-finished, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 35, :method-params ([a-ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a-ns]))}, warn-on-iref-updates {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 197, :column 7, :end-line 197, :end-column 27, :arglists (quote ([]))}, :name expectations/warn-on-iref-updates, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, find-failures {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 377, :column 7, :end-line 377, :end-column 20, :arglists (quote ([the-seq]))}, :name expectations/find-failures, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 20, :method-params ([the-seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 1, :fn-var true, :arglists (quote ([the-seq]))}, var-kind {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 287, :column 7, :end-line 287, :end-column 15, :arglists (quote ([v]))}, :name expectations/var-kind, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, actual-message {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 321, :column 4, :end-line 321, :end-column 18, :protocol expectations/CustomPred, :doc nil, :arglists (quote ([e a str-e str-a]))}, :protocol expectations/CustomPred, :name expectations/actual-message, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 18, :method-params ([e a str-e str-a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 321, :max-fixed-arity 4, :fn-var true, :arglists (quote ([e a str-e str-a])), :doc nil}, test-name {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 90, :column 7, :end-line 90, :end-column 16, :arglists (quote ([{:keys [line ns]}]))}, :name expectations/test-name, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 16, :method-params ([p__9441]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [line ns]}]))}, pruned-stack-trace {:protocol-inline nil, :meta {:file "/home/arne/github/expectations/src/cljc/expectations.cljc", :line 128, :column 7, :end-line 128, :end-column 25, :arglists (quote ([t]))}, :name expectations/pruned-stack-trace, :variadic false, :file "/home/arne/github/expectations/src/cljc/expectations.cljc", :end-column 25, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:expectations/in-flag :expectations/strings :expectations/ref-data :else :iref :reset :str-e :expectations/equals :yellow :a-fn :raw :default :ns :expectations/maps :fileName :green :file :cyan :expected-message :expectations/expected-exception :run-time :ref-data :expectations/fn :expectations/sequentials :gen-str-a :type :before-run :expectations/run :e expect :className :expectations/more :expectation :expectations/from-each-body :expectations/default :expectations-options :after-run :summary :expectations/custom-pred :fail :success :ignored-expectations :expectations/expect-exception :line :list :focused :status :result :red :blue :expectations/sets :expectations/regexps :expectations/re-seq :expectations/expectations-watching-state-modifications :actual-message :expectations/the-result :expectations/from-each :expectations/types :error :expectations/in :magenta :pass :lineNumber :in-context :expectations/from-each-flag :expectations/expect-instance :expectations/actual-exception :hierarchy :methodName :the-var :test :show-raw :message}, :order [:expectations/in :expectations/in-flag :test :pass :fail :error :run-time :reset :red :blue :yellow :cyan :green :magenta :line :ns :file expect :className :fileName :methodName :lineNumber :raw :ref-data :result :expected-message :actual-message :message :list :show-raw :hierarchy :type :default :expectations/run :status :success :summary :ignored-expectations :expectations/expectations-watching-state-modifications :else :before-run :iref :expectation :in-context :the-var :after-run :focused :expectations-options :expectations/custom-pred :expectations/from-each-flag :expectations/from-each :expectations/more :expectations/equals :expectations/strings :expectations/maps :expectations/sets :expectations/sequentials :expectations/regexps :expectations/re-seq :expectations/expect-exception :expectations/expected-exception :expectations/actual-exception :expectations/types :expectations/expect-instance :expectations/fn :expectations/default :expectations/from-each-body :expectations/the-result :expectations/ref-data :e :str-e :a-fn :gen-str-a]}, :doc nil}